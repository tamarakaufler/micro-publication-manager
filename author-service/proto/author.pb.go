// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/author.proto

package publication_management_author

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Author struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Country              string   `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	Token                string   `protobuf:"bytes,8,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_72dfe00c5313624c, []int{0}
}
func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (dst *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(dst, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Author) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Author) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Author) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Author) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Author) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Author) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Author) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Valid                bool     `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
	Errors               []*Error `protobuf:"bytes,3,rep,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_72dfe00c5313624c, []int{1}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Token) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type GetAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllRequest) Reset()         { *m = GetAllRequest{} }
func (m *GetAllRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllRequest) ProtoMessage()    {}
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_72dfe00c5313624c, []int{2}
}
func (m *GetAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllRequest.Unmarshal(m, b)
}
func (m *GetAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllRequest.Marshal(b, m, deterministic)
}
func (dst *GetAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllRequest.Merge(dst, src)
}
func (m *GetAllRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllRequest.Size(m)
}
func (m *GetAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllRequest proto.InternalMessageInfo

type Response struct {
	Created              bool      `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`
	Author               *Author   `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Authors              []*Author `protobuf:"bytes,3,rep,name=authors" json:"authors,omitempty"`
	Errors               []*Error  `protobuf:"bytes,4,rep,name=errors" json:"errors,omitempty"`
	Token                *Token    `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_72dfe00c5313624c, []int{3}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Response) GetAuthors() []*Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *Response) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *Response) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_72dfe00c5313624c, []int{4}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Author)(nil), "publication.management.author.Author")
	proto.RegisterType((*Token)(nil), "publication.management.author.Token")
	proto.RegisterType((*GetAllRequest)(nil), "publication.management.author.GetAllRequest")
	proto.RegisterType((*Response)(nil), "publication.management.author.Response")
	proto.RegisterType((*Error)(nil), "publication.management.author.Error")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AuthorService service

type AuthorServiceClient interface {
	CreateAuthor(ctx context.Context, in *Author, opts ...client.CallOption) (*Response, error)
	GetAuthor(ctx context.Context, in *Author, opts ...client.CallOption) (*Response, error)
	GetAll(ctx context.Context, in *GetAllRequest, opts ...client.CallOption) (*Response, error)
	ValidateToken(ctx context.Context, in *Token, opts ...client.CallOption) (*Token, error)
	Authenticate(ctx context.Context, in *Author, opts ...client.CallOption) (*Token, error)
}

type authorServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAuthorServiceClient(serviceName string, c client.Client) AuthorServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "publication.management.author"
	}
	return &authorServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *authorServiceClient) CreateAuthor(ctx context.Context, in *Author, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthorService.CreateAuthor", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) GetAuthor(ctx context.Context, in *Author, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthorService.GetAuthor", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthorService.GetAll", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) ValidateToken(ctx context.Context, in *Token, opts ...client.CallOption) (*Token, error) {
	req := c.c.NewRequest(c.serviceName, "AuthorService.ValidateToken", in)
	out := new(Token)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) Authenticate(ctx context.Context, in *Author, opts ...client.CallOption) (*Token, error) {
	req := c.c.NewRequest(c.serviceName, "AuthorService.Authenticate", in)
	out := new(Token)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthorService service

type AuthorServiceHandler interface {
	CreateAuthor(context.Context, *Author, *Response) error
	GetAuthor(context.Context, *Author, *Response) error
	GetAll(context.Context, *GetAllRequest, *Response) error
	ValidateToken(context.Context, *Token, *Token) error
	Authenticate(context.Context, *Author, *Token) error
}

func RegisterAuthorServiceHandler(s server.Server, hdlr AuthorServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AuthorService{hdlr}, opts...))
}

type AuthorService struct {
	AuthorServiceHandler
}

func (h *AuthorService) CreateAuthor(ctx context.Context, in *Author, out *Response) error {
	return h.AuthorServiceHandler.CreateAuthor(ctx, in, out)
}

func (h *AuthorService) GetAuthor(ctx context.Context, in *Author, out *Response) error {
	return h.AuthorServiceHandler.GetAuthor(ctx, in, out)
}

func (h *AuthorService) GetAll(ctx context.Context, in *GetAllRequest, out *Response) error {
	return h.AuthorServiceHandler.GetAll(ctx, in, out)
}

func (h *AuthorService) ValidateToken(ctx context.Context, in *Token, out *Token) error {
	return h.AuthorServiceHandler.ValidateToken(ctx, in, out)
}

func (h *AuthorService) Authenticate(ctx context.Context, in *Author, out *Token) error {
	return h.AuthorServiceHandler.Authenticate(ctx, in, out)
}

func init() { proto.RegisterFile("proto/author.proto", fileDescriptor_author_72dfe00c5313624c) }

var fileDescriptor_author_72dfe00c5313624c = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcd, 0x8a, 0xd4, 0x40,
	0x10, 0x76, 0x7e, 0x92, 0xc9, 0xd4, 0xec, 0x28, 0x14, 0x1e, 0x9a, 0x91, 0x85, 0x21, 0x28, 0xee,
	0x41, 0x22, 0x8c, 0x37, 0x71, 0x91, 0x45, 0xc4, 0x9b, 0x87, 0x28, 0xde, 0x44, 0x7b, 0x93, 0x52,
	0x1b, 0x93, 0x74, 0xb6, 0xbb, 0x67, 0xc5, 0x97, 0xf1, 0x99, 0x7c, 0x15, 0xdf, 0x40, 0xba, 0x3a,
	0x8d, 0xe3, 0xc5, 0xc9, 0x1e, 0xbc, 0xd5, 0x57, 0x5f, 0x7d, 0x95, 0xae, 0xaf, 0x6a, 0x06, 0xb0,
	0x37, 0xda, 0xe9, 0xc7, 0x72, 0xef, 0xbe, 0x68, 0x53, 0x30, 0xc0, 0xd3, 0x7e, 0x7f, 0xd9, 0xa8,
	0x4a, 0x3a, 0xa5, 0xbb, 0xa2, 0x95, 0x9d, 0xfc, 0x4c, 0x2d, 0x75, 0xae, 0x08, 0x45, 0xf9, 0xcf,
	0x09, 0xa4, 0x17, 0x1c, 0xe2, 0x6d, 0x98, 0xaa, 0x5a, 0x4c, 0xb6, 0x93, 0xb3, 0x65, 0x39, 0x55,
	0x35, 0x9e, 0x02, 0x7c, 0x52, 0xc6, 0xba, 0x0f, 0x9d, 0x6c, 0x49, 0x4c, 0x39, 0xbf, 0xe4, 0xcc,
	0x6b, 0xd9, 0x12, 0xde, 0x83, 0x65, 0x23, 0x23, 0x3b, 0x63, 0x36, 0xf3, 0x09, 0x26, 0x05, 0x2c,
	0x64, 0x5d, 0x1b, 0xb2, 0x56, 0xcc, 0x99, 0x8a, 0xd0, 0x33, 0x95, 0xde, 0x77, 0xce, 0x7c, 0x17,
	0x49, 0x60, 0x06, 0x88, 0x77, 0x21, 0xa1, 0x56, 0xaa, 0x46, 0xa4, 0x9c, 0x0f, 0x00, 0x37, 0x90,
	0xf5, 0xd2, 0xda, 0x6f, 0xda, 0xd4, 0x62, 0x11, 0xbe, 0x12, 0xb1, 0x57, 0x38, 0xfd, 0x95, 0x3a,
	0x91, 0x05, 0x05, 0x83, 0xfc, 0x0a, 0x92, 0xb7, 0x3e, 0xf8, 0x43, 0x4f, 0x0e, 0x68, 0x9f, 0xbd,
	0x96, 0x8d, 0xaa, 0x79, 0xa2, 0xac, 0x0c, 0x00, 0x9f, 0x41, 0x4a, 0xc6, 0x68, 0x63, 0xc5, 0x6c,
	0x3b, 0x3b, 0x5b, 0xed, 0xee, 0x17, 0xff, 0xf4, 0xad, 0x78, 0xe9, 0x8b, 0xcb, 0x41, 0x93, 0xdf,
	0x81, 0xf5, 0x2b, 0x72, 0x17, 0x4d, 0x53, 0xd2, 0xd5, 0x9e, 0xac, 0xcb, 0x7f, 0x4c, 0x21, 0x2b,
	0xc9, 0xf6, 0xba, 0xb3, 0x6c, 0x46, 0x65, 0x48, 0x3a, 0x0a, 0xee, 0x66, 0x65, 0x84, 0x78, 0x0e,
	0x69, 0xe8, 0xc7, 0x8f, 0x59, 0xed, 0x1e, 0x1c, 0xf9, 0x6a, 0xd8, 0x54, 0x39, 0x88, 0xf0, 0x39,
	0x2c, 0x42, 0x14, 0x5f, 0x3d, 0x52, 0x1f, 0x55, 0x07, 0x53, 0xcf, 0x6f, 0x3e, 0x35, 0x3e, 0x8d,
	0xfe, 0x26, 0xfc, 0xf8, 0x63, 0x62, 0x5e, 0x4a, 0x5c, 0xd2, 0x39, 0x24, 0xdc, 0x0c, 0x11, 0xe6,
	0x95, 0xae, 0x89, 0x9d, 0x49, 0x4a, 0x8e, 0x71, 0x0b, 0xab, 0x9a, 0x6c, 0x65, 0x54, 0xef, 0x5b,
	0x0d, 0xa7, 0x77, 0x98, 0xda, 0xfd, 0x9a, 0xc1, 0x3a, 0x0c, 0xf3, 0x86, 0xcc, 0xb5, 0xaa, 0x08,
	0x3f, 0xc2, 0xc9, 0x0b, 0x76, 0x75, 0xb8, 0xe6, 0x71, 0x56, 0x6c, 0x1e, 0x1e, 0x29, 0x8b, 0x4b,
	0xcc, 0x6f, 0xe1, 0x7b, 0x58, 0xfa, 0x25, 0xff, 0xaf, 0xf6, 0x12, 0xd2, 0x70, 0x43, 0xf8, 0xe8,
	0x88, 0xe8, 0xaf, 0x53, 0xbb, 0xd9, 0x04, 0xeb, 0x77, 0xfe, 0xda, 0xa5, 0xa3, 0xf0, 0x0b, 0x19,
	0xb5, 0xb2, 0xcd, 0xa8, 0x2a, 0x6e, 0x7f, 0xe2, 0xc7, 0xa6, 0xce, 0xf9, 0x5a, 0x1a, 0xeb, 0xd1,
	0xc8, 0xf6, 0x97, 0x29, 0xff, 0xa1, 0x3d, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x91, 0x0c, 0xe2,
	0xf8, 0xe6, 0x04, 0x00, 0x00,
}
