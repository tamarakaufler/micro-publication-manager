// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/author.proto

package publication_management_author

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Author struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Books                []string `protobuf:"bytes,5,rep,name=books" json:"books,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_da53916e5566af07, []int{0}
}
func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (dst *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(dst, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Author) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Author) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Author) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Author) GetBooks() []string {
	if m != nil {
		return m.Books
	}
	return nil
}

func (m *Author) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_da53916e5566af07, []int{1}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Response struct {
	Created              bool      `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`
	Author               *Author   `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Authors              []*Author `protobuf:"bytes,3,rep,name=authors" json:"authors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_da53916e5566af07, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Response) GetAuthors() []*Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

func init() {
	proto.RegisterType((*Author)(nil), "publication.management.author.Author")
	proto.RegisterType((*GetRequest)(nil), "publication.management.author.GetRequest")
	proto.RegisterType((*Response)(nil), "publication.management.author.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AuthorService service

type AuthorServiceClient interface {
	CreateAuthor(ctx context.Context, in *Author, opts ...client.CallOption) (*Response, error)
	GetAuthors(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
}

type authorServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAuthorServiceClient(serviceName string, c client.Client) AuthorServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "publication.management.author"
	}
	return &authorServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *authorServiceClient) CreateAuthor(ctx context.Context, in *Author, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthorService.CreateAuthor", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) GetAuthors(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "AuthorService.GetAuthors", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthorService service

type AuthorServiceHandler interface {
	CreateAuthor(context.Context, *Author, *Response) error
	GetAuthors(context.Context, *GetRequest, *Response) error
}

func RegisterAuthorServiceHandler(s server.Server, hdlr AuthorServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AuthorService{hdlr}, opts...))
}

type AuthorService struct {
	AuthorServiceHandler
}

func (h *AuthorService) CreateAuthor(ctx context.Context, in *Author, out *Response) error {
	return h.AuthorServiceHandler.CreateAuthor(ctx, in, out)
}

func (h *AuthorService) GetAuthors(ctx context.Context, in *GetRequest, out *Response) error {
	return h.AuthorServiceHandler.GetAuthors(ctx, in, out)
}

func init() { proto.RegisterFile("proto/author.proto", fileDescriptor_author_da53916e5566af07) }

var fileDescriptor_author_da53916e5566af07 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0x26, 0x0d, 0x4d, 0x9b, 0xa3, 0x30, 0x58, 0x0c, 0x16, 0xa8, 0x52, 0x14, 0x09, 0x51, 0x96,
	0x20, 0x95, 0x19, 0x21, 0xc4, 0xc0, 0xc6, 0x60, 0x1e, 0x00, 0x9c, 0xe4, 0x00, 0x8b, 0xc6, 0x0e,
	0xb6, 0x83, 0xc4, 0xcb, 0x30, 0xf1, 0x4a, 0xbc, 0x0f, 0xea, 0x39, 0x11, 0x1b, 0x2d, 0xdb, 0x7d,
	0x7f, 0xb9, 0xcb, 0x27, 0x03, 0x6b, 0xad, 0xf1, 0xe6, 0x5c, 0x76, 0xfe, 0xc5, 0xd8, 0x82, 0x00,
	0x9b, 0xb7, 0x5d, 0xb9, 0x52, 0x95, 0xf4, 0xca, 0xe8, 0xa2, 0x91, 0x5a, 0x3e, 0x63, 0x83, 0xda,
	0x17, 0xc1, 0x94, 0x7f, 0x46, 0x90, 0x5c, 0xd3, 0xc8, 0x0e, 0x60, 0xa4, 0x6a, 0x1e, 0x65, 0xd1,
	0x22, 0x15, 0x23, 0x55, 0xb3, 0x39, 0xc0, 0x93, 0xb2, 0xce, 0x3f, 0x68, 0xd9, 0x20, 0x1f, 0x11,
	0x9f, 0x12, 0x73, 0x27, 0x1b, 0x64, 0xc7, 0x90, 0xae, 0xe4, 0xa0, 0xc6, 0xa4, 0x4e, 0xd7, 0x04,
	0x89, 0x1c, 0x26, 0xb2, 0xae, 0x2d, 0x3a, 0xc7, 0x77, 0x49, 0x1a, 0x20, 0x3b, 0x84, 0x71, 0x69,
	0xcc, 0xab, 0xe3, 0xe3, 0x2c, 0x5e, 0xa4, 0x22, 0x80, 0xb5, 0xbf, 0x32, 0x9d, 0xf6, 0xf6, 0x83,
	0x27, 0xc1, 0xdf, 0xc3, 0x7c, 0x06, 0x70, 0x8b, 0x5e, 0xe0, 0x5b, 0x87, 0xce, 0xe7, 0x5f, 0x11,
	0x4c, 0x05, 0xba, 0xd6, 0x68, 0x47, 0x4b, 0x2a, 0x8b, 0xd2, 0x63, 0xb8, 0x7a, 0x2a, 0x06, 0xc8,
	0x2e, 0x21, 0x09, 0xff, 0x47, 0x67, 0xef, 0x2d, 0x4f, 0x8a, 0x3f, 0x5b, 0x28, 0x42, 0x03, 0xa2,
	0x0f, 0xb1, 0x2b, 0x98, 0x84, 0xc9, 0xf1, 0x38, 0x8b, 0xb7, 0xcf, 0x0f, 0xa9, 0xe5, 0x77, 0x04,
	0xfb, 0x81, 0xbb, 0x47, 0xfb, 0xae, 0x2a, 0x64, 0x8f, 0x30, 0xbb, 0xa1, 0xe3, 0xfa, 0xb2, 0xb7,
	0xfb, 0xe2, 0xd1, 0xe9, 0x06, 0xdb, 0xd0, 0x45, 0xbe, 0xc3, 0x4a, 0x2a, 0x2a, 0xe4, 0x1c, 0x3b,
	0xdb, 0x10, 0xfc, 0xed, 0xf4, 0x1f, 0x3b, 0xca, 0x84, 0xde, 0xd4, 0xc5, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd8, 0x64, 0xbe, 0xca, 0x69, 0x02, 0x00, 0x00,
}
